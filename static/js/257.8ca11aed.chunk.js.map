{"version":3,"file":"static/js/257.8ca11aed.chunk.js","mappings":"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","sources":["API/API.js","components/Error/Error.jsx","pages/MovieDetails/MovieDetails.styled.jsx","pages/MovieDetails/MovieDetails.jsx"],"sourcesContent":["import axios from 'axios';\n\naxios.defaults.headers.common['Authorization'] =\n  'Bearer eyJhbGciOiJIUzI1NiJ9.eyJhdWQiOiI4MDE1YmRkMmYzMzE3ZTU1ZWZhNGI4MDRiMjM5ODIxNCIsInN1YiI6IjY1MmQ2NzAxMDI0ZWM4MDEzYzU4ZjA1OCIsInNjb3BlcyI6WyJhcGlfcmVhZCJdLCJ2ZXJzaW9uIjoxfQ.JgGJlVdaUoUJ0oty7awv62yWcrI5JHku-ci7ur8caIk';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3/';\nconst TRENDING = 'trending/all/day';\nconst DETAILSMOVIE = 'movie/';\nconst CREDITS = '/credits';\nconst REVIEWS = '/reviews';\nconst SEARCH = 'search/movie';\n\nconst params = {\n  language: 'en-US',\n};\n\nexport async function getTrendingMovies(signal) {\n  const response = await axios.get(TRENDING, { params, signal });\n  return response.data.results;\n}\n\nexport async function getMovieById(id, signal) {\n  const response = await axios.get(DETAILSMOVIE + id, { params, signal });\n  return response.data;\n}\n\nexport async function getMovieCast(id, signal) {\n  const response = await axios.get(DETAILSMOVIE + id + CREDITS, {\n    params,\n    signal,\n  });\n  return response.data.cast;\n}\n\nexport async function getMovieReviews(id, signal) {\n  const response = await axios.get(DETAILSMOVIE + id + REVIEWS, {\n    params,\n    signal,\n  });\n  return response.data;\n}\n\nexport async function getMovieByQuery(query, signal) {\n  const params = {\n    query: query,\n    include_adult: false,\n    language: 'en-US',\n  };\n\n  const response = await axios.get(SEARCH, { params, signal });\n  return response.data.results;\n}\n","const Error = ({ textError }) => {\n  return <p>{textError}</p>;\n};\n\nexport default Error;\n","import { NavLink } from 'react-router-dom';\nimport styled from 'styled-components';\n\nexport const LinkBack = styled(NavLink)`\n  color: black;\n  font-weight: bold;\n\n  &:hover {\n    color: #353599;\n  }\n\n  &.active {\n    color: #353599;\n  }\n`;\n\nexport const MovieCard = styled.div`\n  margin-top: 8px;\n  padding: 8px;\n\n  background-color: lightgray;\n  border-radius: 4px;\n\n  div {\n    display: flex;\n    gap: 8px;\n  }\n\n  img {\n    width: 240px;\n    height: auto;\n  }\n\n  p {\n    max-width: 1100px;\n  }\n`;\n\nexport const MovieCardInfo = styled.div`\n  display: flex;\n  flex-direction: column;\n  gap: 4px;\n\n  ul {\n    display: flex;\n    gap: 4px;\n  }\n`;\n\nexport const AddInfo = styled.div`\n  display: flex;\n  flex-direction: column;\n\n  margin-top: 16px;\n\n  p {\n    font-weight: bold;\n  }\n`;\n\nexport const AddStyledLink = styled(NavLink)`\n  color: black;\n  font-weight: bold;\n\n  &:hover {\n    color: #353599;\n  }\n\n  &.active {\n    color: #353599;\n  }\n`;\n","import { useState, useRef, useEffect, useMemo, Suspense } from 'react';\nimport { Outlet, useLocation, useParams } from 'react-router-dom';\n\nimport { getMovieById } from 'API/API';\nimport Loader from 'components/Loader/Loader';\nimport Error from 'components/Error/Error';\nimport {\n  AddInfo,\n  AddStyledLink,\n  LinkBack,\n  MovieCard,\n  MovieCardInfo,\n} from './MovieDetails.styled';\n\nconst MovieDetails = () => {\n  const location = useLocation();\n  const refLocation = useRef(location.state?.from ?? '/');\n  const [movieDetails, setMovieDetails] = useState({});\n  const [load, setLoad] = useState(false);\n  const [error, setError] = useState(false);\n  const { id } = useParams();\n\n  useEffect(() => {\n    const controller = new AbortController();\n\n    const getDetailsForMivie = async () => {\n      try {\n        setLoad(true);\n        setError(false);\n        const response = await getMovieById(id, controller.signal);\n        setMovieDetails(response);\n        setLoad(false);\n      } catch (error) {\n        if (error.code !== 'ERR_CANCELED') {\n          setError(true);\n        }\n      }\n    };\n\n    getDetailsForMivie();\n\n    return () => {\n      controller.abort();\n    };\n  }, [id]);\n\n  const isMovieDetailsEmpty = useMemo(\n    () => Boolean(Object.keys(movieDetails).length),\n    [movieDetails]\n  );\n\n  const { poster_path, original_title, vote_average, overview, genres } =\n    movieDetails;\n\n  return (\n    <>\n      <LinkBack to={refLocation.current}>\n        {refLocation.current ? <p>Go back</p> : <p>Go home</p>}\n      </LinkBack>\n      {load && <Loader />}\n      {error && (\n        <Error\n          textError={'Movie has not founded, choose please another movies'}\n        />\n      )}\n\n      {isMovieDetailsEmpty && (\n        <MovieCard>\n          <div>\n            {poster_path && (\n              <img\n                src={`https://image.tmdb.org/t/p/w300/${poster_path}`}\n                alt=\"\"\n              />\n            )}\n\n            <MovieCardInfo>\n              <h2>{original_title}</h2>\n              <p>\n                User Score: <span> {vote_average?.toFixed(2)} %</span>\n              </p>\n              <h3>Overview</h3>\n              <p>{overview}</p>\n              <h3>Genres</h3>\n              <ul>\n                {genres?.map(({ id, name }) => (\n                  <li key={id}> {name}</li>\n                ))}\n              </ul>\n            </MovieCardInfo>\n          </div>\n          <AddInfo>\n            <p>Additional information</p>\n            <div>\n              <AddStyledLink to={`cast`}>Cast</AddStyledLink>\n              <AddStyledLink to={`reviews`}>Reviews</AddStyledLink>\n            </div>\n          </AddInfo>\n        </MovieCard>\n      )}\n\n      <Suspense fallback={<Loader />}>\n        <Outlet />\n      </Suspense>\n    </>\n  );\n};\n\nexport default MovieDetails;\n"],"names":["axios","TRENDING","DETAILSMOVIE","CREDITS","REVIEWS","SEARCH","params","language","getTrendingMovies","signal","response","data","results","getMovieById","id","getMovieCast","cast","getMovieReviews","getMovieByQuery","query","include_adult","textError","LinkBack","styled","NavLink","MovieCard","MovieCardInfo","AddInfo","AddStyledLink","location","useLocation","refLocation","useRef","state","from","useState","movieDetails","setMovieDetails","load","setLoad","error","setError","useParams","useEffect","controller","AbortController","getDetailsForMivie","code","abort","isMovieDetailsEmpty","useMemo","Boolean","Object","keys","length","poster_path","original_title","vote_average","overview","genres","to","current","Loader","Error","src","alt","toFixed","map","name","Suspense","fallback"],"sourceRoot":""}