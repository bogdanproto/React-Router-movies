{"version":3,"file":"static/js/758.2ae58587.chunk.js","mappings":"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","sources":["API/API.js","components/CastItem/CastItem.styled.jsx","components/CastItem/CastItem.jsx","components/Cast/Cast.styled.jsx","components/Cast/Cast.jsx","components/Error/Error.jsx"],"sourcesContent":["import axios from 'axios';\n\naxios.defaults.headers.common['Authorization'] =\n  'Bearer eyJhbGciOiJIUzI1NiJ9.eyJhdWQiOiI4MDE1YmRkMmYzMzE3ZTU1ZWZhNGI4MDRiMjM5ODIxNCIsInN1YiI6IjY1MmQ2NzAxMDI0ZWM4MDEzYzU4ZjA1OCIsInNjb3BlcyI6WyJhcGlfcmVhZCJdLCJ2ZXJzaW9uIjoxfQ.JgGJlVdaUoUJ0oty7awv62yWcrI5JHku-ci7ur8caIk';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3/';\nconst TRENDING = 'trending/all/day';\nconst DETAILSMOVIE = 'movie/';\nconst CREDITS = '/credits';\nconst REVIEWS = '/reviews';\nconst SEARCH = 'search/movie';\n\nconst params = {\n  language: 'en-US',\n};\n\nexport async function getTrendingMovies(signal) {\n  const response = await axios.get(TRENDING, { params, signal });\n  return response.data.results;\n}\n\nexport async function getMovieById(id, signal) {\n  const response = await axios.get(DETAILSMOVIE + id, { params, signal });\n  return response.data;\n}\n\nexport async function getMovieCast(id, signal) {\n  const response = await axios.get(DETAILSMOVIE + id + CREDITS, {\n    params,\n    signal,\n  });\n  return response.data.cast;\n}\n\nexport async function getMovieReviews(id, signal) {\n  const response = await axios.get(DETAILSMOVIE + id + REVIEWS, {\n    params,\n    signal,\n  });\n  return response.data;\n}\n\nexport async function getMovieByQuery(query, signal) {\n  const params = {\n    query: query,\n    include_adult: false,\n    language: 'en-US',\n  };\n\n  const response = await axios.get(SEARCH, { params, signal });\n  return response.data.results;\n}\n","import styled from 'styled-components';\n\nexport const ItemCast = styled.li`\n  border-radius: 8px;\n  box-shadow: 0px 1px 3px 0px rgba(0, 0, 0, 0.2),\n    0px 1px 1px 0px rgba(0, 0, 0, 0.14), 0px 2px 1px -1px rgba(0, 0, 0, 0.12);\n\n  background-color: #ececec;\n\n  img {\n    width: auto;\n    height: auto;\n    object-fit: cover;\n\n    border-radius: 8px;\n  }\n  p {\n    display: block;\n    padding: 4px;\n    margin-top: auto;\n    margin-bottom: auto;\n\n    font-size: 8px;\n    text-align: center;\n  }\n\n  h1 {\n    font-size: 64px;\n    text-align: center;\n  }\n`;\n","import { ItemCast } from './CastItem.styled';\n\nconst CastItem = ({ profile_path, name, character }) => {\n  return (\n    <ItemCast>\n      {profile_path ? (\n        <img src={`https://image.tmdb.org/t/p/w300/${profile_path}`} alt=\"\" />\n      ) : (\n        <h1>?</h1>\n      )}\n\n      <p>{name}</p>\n      <p>{character}</p>\n    </ItemCast>\n  );\n};\n\nexport default CastItem;\n","import styled from 'styled-components';\n\nexport const GalleryCast = styled.ul`\n  display: grid;\n  max-width: calc(100vw - 32px);\n  grid-template-columns: repeat(auto-fill, minmax(64px, 1fr));\n  grid-gap: 16px;\n  margin-top: 0;\n  margin-bottom: 0;\n  padding: 16px;\n  list-style: none;\n  margin-left: auto;\n  margin-right: auto;\n\n  background-color: lightgrey;\n`;\n\nexport const CastInfo = styled.p`\n  font-size: 24px;\n  font-weight: bold;\n`;\n","import { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\n\nimport { getMovieCast } from 'API/API';\nimport CastItem from 'components/CastItem/CastItem';\nimport Loader from 'components/Loader/Loader';\nimport Error from 'components/Error/Error';\nimport { CastInfo, GalleryCast } from './Cast.styled';\n\nconst Cast = () => {\n  const [castMovies, setCastMovies] = useState(null);\n  const [load, setLoad] = useState(false);\n  const [error, setError] = useState(false);\n  const { id } = useParams();\n\n  useEffect(() => {\n    const controller = new AbortController();\n\n    const getCastForMovie = async () => {\n      try {\n        setLoad(true);\n        setError(false);\n        const response = await getMovieCast(id, controller.signal);\n        setCastMovies(response);\n        setLoad(false);\n      } catch (error) {\n        if (error.code !== 'ERR_CANCELED') {\n          setError(true);\n        }\n      }\n    };\n    getCastForMovie();\n\n    return () => {\n      controller.abort();\n    };\n  }, [id]);\n\n  return (\n    <>\n      {load && <Loader />}\n      {error && <Error textError={'Someting went wrong, try to reload'} />}\n      {castMovies && Boolean(castMovies.length) && (\n        <GalleryCast>\n          {castMovies?.map(({ id, profile_path, name, character }) => (\n            <CastItem\n              key={id}\n              profile_path={profile_path}\n              name={name}\n              character={character}\n            />\n          ))}\n        </GalleryCast>\n      )}\n      {castMovies && !castMovies.length && (\n        <CastInfo>There are no information about cast</CastInfo>\n      )}\n    </>\n  );\n};\n\nexport default Cast;\n","const Error = ({ textError }) => {\n  return <p>{textError}</p>;\n};\n\nexport default Error;\n"],"names":["axios","TRENDING","DETAILSMOVIE","CREDITS","REVIEWS","SEARCH","params","language","getTrendingMovies","signal","response","data","results","getMovieById","id","getMovieCast","cast","getMovieReviews","getMovieByQuery","query","include_adult","ItemCast","styled","profile_path","name","character","src","alt","GalleryCast","CastInfo","useState","castMovies","setCastMovies","load","setLoad","error","setError","useParams","useEffect","controller","AbortController","getCastForMovie","code","abort","Loader","Error","textError","Boolean","length","map"],"sourceRoot":""}