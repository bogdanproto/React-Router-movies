{"version":3,"file":"static/js/964.d8d84b45.chunk.js","mappings":"mTAEAA,EAAAA,EAAAA,SAAAA,QAAAA,OAAAA,cACE,6NAEFA,EAAAA,EAAAA,SAAAA,QAAyB,gCACzB,IAAMC,EAAW,mBACXC,EAAe,SACfC,EAAU,WACVC,EAAU,WACVC,EAAS,eAETC,EAAS,CACbC,SAAU,SAGL,SAAeC,IAAtB,4CAAO,OAAP,oBAAO,oGACkBR,EAAAA,EAAAA,IAAUC,EAAU,CAAEK,OAAAA,IADxC,cACCG,EADD,yBAEEA,EAASC,KAAKC,SAFhB,kEAKA,SAAeC,EAAtB,+CAAO,OAAP,oBAAO,WAA4BC,GAA5B,uFACkBb,EAAAA,EAAAA,IAAUE,EAAeW,EAAI,CAAEP,OAAAA,IADjD,cACCG,EADD,yBAEEA,EAASC,MAFX,kEAKA,SAAeI,EAAtB,+CAAO,OAAP,oBAAO,WAA4BD,GAA5B,uFACkBb,EAAAA,EAAAA,IAAUE,EAAeW,EAAKV,EAAS,CAAEG,OAAAA,IAD3D,cACCG,EADD,yBAEEA,EAASC,KAAKK,MAFhB,kEAKA,SAAeC,EAAtB,+CAAO,OAAP,oBAAO,WAA+BH,GAA/B,uFACkBb,EAAAA,EAAAA,IAAUE,EAAeW,EAAKT,EAAS,CAAEE,OAAAA,IAD3D,cACCG,EADD,yBAEEA,EAASC,MAFX,kEAKA,SAAeO,EAAtB,+CAAO,OAAP,oBAAO,WAA+BC,GAA/B,gFACCZ,EAAS,CACbY,MAAOA,EACPC,eAAe,EACfZ,SAAU,SAJP,SAOkBP,EAAAA,EAAAA,IAAUK,EAAQ,CAAEC,OAAAA,IAPtC,cAOCG,EAPD,yBAQEA,EAASC,KAAKC,SARhB,mE,oCChCP,IAJc,SAAC,GAAmB,IAAjBS,EAAgB,EAAhBA,UACf,OAAO,uBAAIA,GACZ,C,oKCAYC,EAAaC,EAAAA,GAAAA,GAAH,6K,SCSvB,EATmB,SAAC,GAAyB,IAAvBC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC5B,OACE,UAACH,EAAD,YACE,wBAAKE,KACL,uBAAIC,MAGT,E,oBCPYC,EAAgBH,EAAAA,GAAAA,GAAH,kFC0C1B,EApCgB,WACd,OAA0CI,EAAAA,EAAAA,UAAS,IAAnD,eAAOC,EAAP,KAAsBC,EAAtB,KACA,GAAwBF,EAAAA,EAAAA,WAAS,GAAjC,eAAOG,EAAP,KAAaC,EAAb,KACA,GAA0BJ,EAAAA,EAAAA,WAAS,GAAnC,eAAOK,EAAP,KAAcC,EAAd,KACQnB,GAAOoB,EAAAA,EAAAA,MAAPpB,GAkBR,OAhBAqB,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAkB,mCAAG,oGAEvBL,GAAQ,GACRE,GAAS,GAHc,UAIAhB,EAAAA,EAAAA,IAAgBH,GAJhB,OAIjBJ,EAJiB,OAKvBmB,EAAiBnB,EAASE,SALH,gDAOvBqB,GAAS,GAPc,yBASvBF,GAAQ,GATe,4EAAH,qDAYxBK,GACD,GAAE,CAACtB,KAGF,gCACGgB,IAAQ,SAACO,EAAA,EAAD,IACRL,IAAS,SAACM,EAAA,EAAD,CAAOjB,UAAW,4BAC5B,UAACK,EAAD,kBACGE,QADH,IACGA,OADH,EACGA,EAAeW,KAAI,gBAAGzB,EAAH,EAAGA,GAAIU,EAAP,EAAOA,OAAQC,EAAf,EAAeA,QAAf,OAClB,SAAC,EAAD,CAAqBD,OAAQA,EAAQC,QAASA,GAA7BX,EADC,IAGnBc,EAAcY,OAAS,IAAMV,IAAQ,uBAAG,8BAIhD,C","sources":["API/API.js","components/Error/Error.jsx","components/ReviewItem/ReviewItem.styled.jsx","components/ReviewItem/ReviewItem.jsx","components/Reviews/Review.styled.jsx","components/Reviews/Reviews.jsx"],"sourcesContent":["import axios from 'axios';\n\naxios.defaults.headers.common['Authorization'] =\n  'Bearer eyJhbGciOiJIUzI1NiJ9.eyJhdWQiOiI4MDE1YmRkMmYzMzE3ZTU1ZWZhNGI4MDRiMjM5ODIxNCIsInN1YiI6IjY1MmQ2NzAxMDI0ZWM4MDEzYzU4ZjA1OCIsInNjb3BlcyI6WyJhcGlfcmVhZCJdLCJ2ZXJzaW9uIjoxfQ.JgGJlVdaUoUJ0oty7awv62yWcrI5JHku-ci7ur8caIk';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3/';\nconst TRENDING = 'trending/all/day';\nconst DETAILSMOVIE = 'movie/';\nconst CREDITS = '/credits';\nconst REVIEWS = '/reviews';\nconst SEARCH = 'search/movie';\n\nconst params = {\n  language: 'en-US',\n};\n\nexport async function getTrendingMovies() {\n  const response = await axios.get(TRENDING, { params });\n  return response.data.results;\n}\n\nexport async function getMovieById(id) {\n  const response = await axios.get(DETAILSMOVIE + id, { params });\n  return response.data;\n}\n\nexport async function getMovieCast(id) {\n  const response = await axios.get(DETAILSMOVIE + id + CREDITS, { params });\n  return response.data.cast;\n}\n\nexport async function getMovieReviews(id) {\n  const response = await axios.get(DETAILSMOVIE + id + REVIEWS, { params });\n  return response.data;\n}\n\nexport async function getMovieByQuery(query) {\n  const params = {\n    query: query,\n    include_adult: false,\n    language: 'en-US',\n  };\n\n  const response = await axios.get(SEARCH, { params });\n  return response.data.results;\n}\n","const Error = ({ textError }) => {\n  return <p>{textError}</p>;\n};\n\nexport default Error;\n","import styled from 'styled-components';\n\nexport const ReviewCard = styled.li`\n  display: flex;\n  flex-direction: column;\n  gap: 8px;\n\n  padding: 8px;\n\n  h3 {\n    margin-top: 16px;\n  }\n\n  background-color: lightgrey;\n`;\n","import { ReviewCard } from './ReviewItem.styled';\n\nconst ReviewItem = ({ author, content }) => {\n  return (\n    <ReviewCard>\n      <h3>{author}</h3>\n      <p>{content}</p>\n    </ReviewCard>\n  );\n};\n\nexport default ReviewItem;\n","import styled from 'styled-components';\n\nexport const ReviewGallery = styled.ul`\n  p {\n    font-size: 24px;\n    font-weight: bold;\n  }\n`;\n","import { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { getMovieReviews } from 'API/API';\nimport ReviewItem from 'components/ReviewItem/ReviewItem';\nimport Loader from 'components/Loader/Loader';\nimport Error from 'components/Error/Error';\nimport { ReviewGallery } from './Review.styled';\n\nconst Reviews = () => {\n  const [reviewsMovies, setReviewsMovies] = useState([]);\n  const [load, setLoad] = useState(false);\n  const [error, setError] = useState(false);\n  const { id } = useParams();\n\n  useEffect(() => {\n    const getReviewsForMovie = async () => {\n      try {\n        setLoad(true);\n        setError(false);\n        const response = await getMovieReviews(id);\n        setReviewsMovies(response.results);\n      } catch (error) {\n        setError(true);\n      } finally {\n        setLoad(false);\n      }\n    };\n    getReviewsForMovie();\n  }, [id]);\n\n  return (\n    <>\n      {load && <Loader />}\n      {error && <Error textError={'Review has not founded'} />}\n      <ReviewGallery>\n        {reviewsMovies?.map(({ id, author, content }) => (\n          <ReviewItem key={id} author={author} content={content} />\n        ))}\n        {reviewsMovies.length < 1 && !load && <p>There are no reviews</p>}\n      </ReviewGallery>\n    </>\n  );\n};\n\nexport default Reviews;\n"],"names":["axios","TRENDING","DETAILSMOVIE","CREDITS","REVIEWS","SEARCH","params","language","getTrendingMovies","response","data","results","getMovieById","id","getMovieCast","cast","getMovieReviews","getMovieByQuery","query","include_adult","textError","ReviewCard","styled","author","content","ReviewGallery","useState","reviewsMovies","setReviewsMovies","load","setLoad","error","setError","useParams","useEffect","getReviewsForMovie","Loader","Error","map","length"],"sourceRoot":""}